---
- name: check for existing install
  become: yes
  become_user: root
  stat:
    path: '{{ keycloak_install_dir }}'
  changed_when: False
  register: keycloak_binary
- when: not keycloak_binary.stat.exists
  block:
    - name: download tgz
      become: yes
      become_user: root
      get_url:
        url: '{{ keycloak_tgz_url }}'
        dest: /tmp/{{ keycloak_tgz }}
        checksum: '{{ keycloak_checksum }}'
        mode: 0644
    - name: unarchive
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: /tmp/{{ keycloak_tgz }}
        dest: '{{ keycloak_parent_install_dir }}'
        creates: '{{ keycloak_install_dir }}'
  always:
    - name: cleanup...
      become: yes
      become_user: root
      file:
        path: /tmp/{{ keycloak_tgz }}
        state: absent

- name: link
  become: yes
  become_user: root
  file:
    src: '{{ keycloak_install_dir }}'
    dest: '{{ keycloak_link_dir }}'
    state: link

- name: create keycloak user
  become: yes
  become_user: root
  tags:
  - keyclock
  user: name=keycloak

- name: keycloak target directory
  become: yes
  become_user: root
  tags:
  - keyclock
  file: dest={{ keycloak_home }}
        mode=755
        owner=root
        group=root
        state=directory
        recurse=true

- name: keycloak standalone directory
  become: yes
  become_user: root
  tags:
  - keyclock
  file: dest={{ keycloak_home }}/standalone
        mode=755
        owner=keycloak
        group=keycloak
        state=directory
        recurse=true

- name: check if admin is already created
  become: yes
  become_user: root
  stat:
    path: '{{ keycloak_home }}/.admin'
  changed_when: False
  register: result
- when: not result.stat.exists
  block:
    - name: add admin user
      shell: "{{ keycloak_home }}/bin/add-user-keycloak.sh -r master -u {{ keycloak_admin_username }} -p {{ keycloak_admin_password }}"
      become: yes
      become_user: root
    - name: mark that admin is created
      become: yes
      become_user: root
      file: dest="{{ keycloak_home }}/.admin"
        mode=755
        owner=keycloak
        group=keycloak
        state=touch

- name: keycloak systemd setup
  become: yes
  become_user: root
  tags:
    - keycloak
  template:
       owner=root group=root mode=0644
      src=keycloak.service.j2
      dest=/etc/systemd/system/keycloak.service
  notify:
    - reload systemd

- name: keycloak systemd service enable and start
  become: yes
  become_user: root
  tags:
    - keycloak
  service: name=keycloak
           enabled=yes
           state=started